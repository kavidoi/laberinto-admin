// Simplified schema for Airtable import demonstration
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Users/Customers from Contactos table
model User {
  id            String  @id @default(cuid())
  airtableId    String? @unique
  email         String  @unique
  name          String?
  firstName     String?
  lastName      String?
  phone         String?
  rut           String?
  role          String  @default("CUSTOMER")
  
  // Relationships
  bookings      Booking[]
  wineSales     WineSale[]
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("users")
}

// Wine Regions
model WineRegion {
  id          String @id @default(cuid())
  airtableId  String? @unique
  name        String @unique
  country     String
  wines       Wine[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("wine_regions")
}

// Wine Categories
model WineCategory {
  id          String @id @default(cuid())
  airtableId  String? @unique
  name        String @unique
  slug        String @unique
  wines       Wine[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("wine_categories")
}

// Wines from Vinos table
model Wine {
  id                String @id @default(cuid())
  airtableId        String? @unique
  name              String
  code              String @unique
  slug              String @unique
  categoryId        String
  regionId          String
  producer          String
  basePrice         Float
  description       String?
  tastingNotes      String?
  pairingNotes      String?
  isActive          Boolean @default(true)
  
  // Relationships
  category          WineCategory @relation(fields: [categoryId], references: [id])
  region            WineRegion   @relation(fields: [regionId], references: [id])
  saleItems         WineSaleItem[]
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("wines")
}

// Locations from Locaciones table
model Location {
  id          String @id @default(cuid())
  airtableId  String? @unique
  name        String
  type        String
  address     String?
  city        String?
  country     String?
  isActive    Boolean @default(true)
  
  // Relationships
  experiences Experience[]
  events      Event[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("locations")
}

// Experiences from Experiencias table
model Experience {
  id              String @id @default(cuid())
  airtableId      String? @unique
  name            String
  slug            String @unique
  type            String
  description     String
  duration        Int // minutes
  maxParticipants Int
  basePrice       Float
  locationId      String
  isActive        Boolean @default(true)
  
  // Relationships
  location        Location @relation(fields: [locationId], references: [id])
  events          Event[]
  bookings        Booking[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("experiences")
}

// Events from Eventos table
model Event {
  id            String @id @default(cuid())
  airtableId    String? @unique
  title         String
  experienceId  String
  locationId    String
  startTime     DateTime
  endTime       DateTime
  maxCapacity   Int
  status        String @default("SCHEDULED")
  priceOverride Float?
  
  // Relationships
  experience    Experience @relation(fields: [experienceId], references: [id])
  location      Location @relation(fields: [locationId], references: [id])
  bookings      Booking[]
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("events")
}

// Bookings from Reservas table
model Booking {
  id              String @id @default(cuid())
  airtableId      String? @unique
  organizerId     String
  experienceId    String?
  eventId         String?
  numParticipants Int
  totalAmount     Float
  status          String @default("PENDING")
  bookingDate     DateTime
  notes           String?
  
  // Relationships
  organizer       User @relation(fields: [organizerId], references: [id])
  experience      Experience? @relation(fields: [experienceId], references: [id])
  event           Event? @relation(fields: [eventId], references: [id])
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("bookings")
}

// Wine Sales from Venta_de_Vinos table
model WineSale {
  id            String @id @default(cuid())
  airtableId    String? @unique
  customerId    String
  totalAmount   Float
  status        String @default("COMPLETED")
  saleDate      DateTime
  notes         String?
  
  // Relationships
  customer      User @relation(fields: [customerId], references: [id])
  items         WineSaleItem[]
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("wine_sales")
}

// Wine Sale Items
model WineSaleItem {
  id         String @id @default(cuid())
  airtableId String? @unique
  saleId     String
  wineId     String
  quantity   Int
  unitPrice  Float
  totalPrice Float
  
  // Relationships
  sale       WineSale @relation(fields: [saleId], references: [id])
  wine       Wine @relation(fields: [wineId], references: [id])
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("wine_sale_items")
}

// Products/Extras from Productos table
model Product {
  id          String @id @default(cuid())
  airtableId  String? @unique
  name        String
  description String?
  price       Float
  category    String? // e.g., "food", "transport", "wine"
  isActive    Boolean @default(true)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
} 